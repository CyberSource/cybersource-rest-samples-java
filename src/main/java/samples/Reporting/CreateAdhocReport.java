package samples.Reporting;
import java.*;
import java.util.*;
import java.math.BigDecimal;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDate;

import com.google.common.base.Strings;
import com.cybersource.authsdk.core.MerchantConfig;

import Api.*;
import Data.Configuration;
import Invokers.ApiClient;
import Invokers.ApiException;
import Model.*;

public class CreateAdhocReport{
	private static String responseCode = null;
	private static String status = null;
	private static Properties merchantProp;

/*
	public static void main(String args[]) throws Exception 
	{
		// Accept required parameters from args[] and pass to run.
		run();
	}
*/
	public static void run(){
	
		CreateAdhocReportRequest requestObj = new CreateAdhocReportRequest();

		requestObj.reportDefinitionName("TransactionRequestClass");

		List <String> reportFields = new ArrayList <String>();
		reportFields.add("Request.RequestID");
		reportFields.add("Request.TransactionDate");
		reportFields.add("Request.MerchantID");
		reportFields.add("AFSFields.IPAddress");
		reportFields.add("AFSFields.IPCountry");
		reportFields.add("AFSFields.IPRoutingMethod");
		reportFields.add("AFSFields.IPState");
		reportFields.add("Application.Name");
		reportFields.add("BankInfo.Address");
		reportFields.add("BankInfo.BranchCode");
		reportFields.add("BankInfo.City");
		reportFields.add("BankInfo.Country");
		reportFields.add("BankInfo.Name");
		reportFields.add("BankInfo.SwiftCode");
		reportFields.add("BillTo.Address1");
		reportFields.add("BillTo.Address2");
		reportFields.add("BillTo.City");
		reportFields.add("BillTo.CompanyName");
		reportFields.add("BillTo.CompanyTaxID");
		reportFields.add("BillTo.Country");
		reportFields.add("BillTo.Email");
		reportFields.add("BillTo.FirstName");
		reportFields.add("BillTo.LastName");
		reportFields.add("BillTo.MiddleName");
		reportFields.add("BillTo.NameSuffix");
		reportFields.add("BillTo.PersonalID");
		reportFields.add("BillTo.Phone");
		reportFields.add("BillTo.State");
		reportFields.add("BillTo.Title");
		reportFields.add("BillTo.Zip");
		reportFields.add("ChargebackAndRetrieval.AdjustmentAmount");
		reportFields.add("ChargebackAndRetrieval.AdjustmentCurrency");
		reportFields.add("ChargebackAndRetrieval.ARN");
		reportFields.add("ChargebackAndRetrieval.CaseIdentifier");
		reportFields.add("ChargebackAndRetrieval.CaseNumber");
		reportFields.add("ChargebackAndRetrieval.CaseTime");
		reportFields.add("ChargebackAndRetrieval.CaseType");
		reportFields.add("ChargebackAndRetrieval.ChargebackAmount");
		reportFields.add("ChargebackAndRetrieval.ChargebackCurrency");
		reportFields.add("ChargebackAndRetrieval.ChargebackMessage");
		reportFields.add("ChargebackAndRetrieval.ChargebackReasonCode");
		reportFields.add("ChargebackAndRetrieval.ChargebackReasonCodeDescription");
		reportFields.add("ChargebackAndRetrieval.ChargebackTime");
		reportFields.add("ChargebackAndRetrieval.DocumentIndicator");
		reportFields.add("ChargebackAndRetrieval.FeeAmount");
		reportFields.add("ChargebackAndRetrieval.FeeCurrency");
		reportFields.add("ChargebackAndRetrieval.FinancialImpact");
		reportFields.add("ChargebackAndRetrieval.FinancialImpactType");
		reportFields.add("ChargebackAndRetrieval.MerchantCategoryCode");
		reportFields.add("ChargebackAndRetrieval.PartialIndicator");
		reportFields.add("ChargebackAndRetrieval.ResolutionTime");
		reportFields.add("ChargebackAndRetrieval.ResolvedToIndicator");
		reportFields.add("ChargebackAndRetrieval.RespondByDate");
		reportFields.add("ChargebackAndRetrieval.TransactionType");
		reportFields.add("Check.AccountEncoderID");
		reportFields.add("Check.BankTransitNumber");
		reportFields.add("Check.SecCode");
		reportFields.add("CustomerFields.BillingAddress1");
		reportFields.add("CustomerFields.BillingAddress2");
		reportFields.add("CustomerFields.BillingCity");
		reportFields.add("CustomerFields.BillingCompanyName");
		reportFields.add("CustomerFields.BillingCountry");
		reportFields.add("CustomerFields.BillingEmail");
		reportFields.add("CustomerFields.BillingFirstName");
		reportFields.add("CustomerFields.BillingLastName");
		reportFields.add("CustomerFields.BillingPhone");
		reportFields.add("CustomerFields.BillingPostalCode");
		reportFields.add("CustomerFields.BillingState");
		reportFields.add("CustomerFields.CustomerID");
		reportFields.add("CustomerFields.CustomerUserName");
		reportFields.add("CustomerFields.PersonalId(CPF/CNPJ)");
		reportFields.add("CustomerFields.ShippingAddress1");
		reportFields.add("CustomerFields.ShippingAddress2");
		reportFields.add("CustomerFields.ShippingCity");
		reportFields.add("CustomerFields.ShippingCompanyName");
		reportFields.add("CustomerFields.ShippingCountry");
		reportFields.add("CustomerFields.ShippingFirstName");
		reportFields.add("CustomerFields.ShippingLastName");
		reportFields.add("CustomerFields.ShippingPhone");
		reportFields.add("CustomerFields.ShippingPostalCode");
		reportFields.add("CustomerFields.ShippingState");
		reportFields.add("DecisionManagerEvents.EventPolicy");
		reportFields.add("DecisionManagerEvents.TypeofEvent");
		reportFields.add("Device.DeviceID");
		reportFields.add("DeviceFingerprintFields.abcd");
		reportFields.add("DeviceFingerprintFields.BrowserLanguage");
		reportFields.add("DeviceFingerprintFields.DeviceLatitude");
		reportFields.add("DeviceFingerprintFields.DeviceLongitude");
		reportFields.add("DeviceFingerprintFields.displayNameFinalCheck");
		reportFields.add("DeviceFingerprintFields.DMESignOffFieldEdit");
		reportFields.add("DeviceFingerprintFields.Fingerprint/DeviceFingerprint");
		reportFields.add("DeviceFingerprintFields.FlashEnabled");
		reportFields.add("DeviceFingerprintFields.FlashOperatingSystem");
		reportFields.add("DeviceFingerprintFields.FlashVersion");
		reportFields.add("DeviceFingerprintFields.GPSAccuracy");
		reportFields.add("DeviceFingerprintFields.ImagesEnabled");
		reportFields.add("DeviceFingerprintFields.Jailbreak/RootPrivileges");
		reportFields.add("DeviceFingerprintFields.JavaScriptEnabled");
		reportFields.add("DeviceFingerprintFields.ProfiledURL");
		reportFields.add("DeviceFingerprintFields.ProxyIPAddress");
		reportFields.add("DeviceFingerprintFields.ProxyIPAddressActivities");
		reportFields.add("DeviceFingerprintFields.ProxyServerType");
		reportFields.add("DeviceFingerprintFields.ScreenResolution");
		reportFields.add("DeviceFingerprintFields.SignOffFieldDMEEditNewOne");
		reportFields.add("DeviceFingerprintFields.SmartID");
		reportFields.add("DeviceFingerprintFields.SmartIDConfidenceLevel");
		reportFields.add("DeviceFingerprintFields.TimeOnPage");
		reportFields.add("DeviceFingerprintFields.TrueIPAddress");
		reportFields.add("DeviceFingerprintFields.TrueIPAddressActivities");
		reportFields.add("DeviceFingerprintFields.TrueIPAddressAttributes");
		reportFields.add("DeviceFingerprintFields.txdea1");
		reportFields.add("DeviceFingerprintFields.txdesv");
		reportFields.add("EmailageFields.FraudType");
		reportFields.add("EmailageFields.IP Postal");
		reportFields.add("EmailageFields.IPCity");
		reportFields.add("EmailageFields.IPCountry");
		reportFields.add("EmailageFields.IPRegion");
		reportFields.add("EmailageFields.SourceIndustry");
		reportFields.add("Event.Amount");
		reportFields.add("Event.CurrencyCode");
		reportFields.add("Event.Event");
		reportFields.add("Event.EventDate");
		reportFields.add("Event.ProcessorMessage");
		reportFields.add("Exception.Action");
		reportFields.add("Exception.CYBSExceptionID");
		reportFields.add("Exception.DccLookupStatus");
		reportFields.add("Exception.ExceptionAmount");
		reportFields.add("Exception.ExceptionAmountCurrency");
		reportFields.add("Exception.ExceptionCategory");
		reportFields.add("Exception.ExceptionDate");
		reportFields.add("Exception.ExceptionDescription");
		reportFields.add("Exception.ExceptionDeviceHardwareRevision");
		reportFields.add("Exception.ExceptionDeviceID");
		reportFields.add("Exception.ExceptionDeviceOS");
		reportFields.add("Exception.ExceptionDeviceOSVersion");
		reportFields.add("Exception.ExceptionDeviceTerminalID");
		reportFields.add("Exception.ExceptionMessage");
		reportFields.add("Exception.ExceptionReasonDescription");
		reportFields.add("Exception.ExceptionStatus");
		reportFields.add("Exception.ExceptionStatusCode");
		reportFields.add("Exception.ExceptionType");
		reportFields.add("Exception.FinancialStatus");
		reportFields.add("Exception.LastActionDate");
		reportFields.add("Exception.NextActionDate");
		reportFields.add("Exception.OriginalTransactionSubmissionDate");
		reportFields.add("Exception.PaymentNumber");
		reportFields.add("Exception.ProcessorCaseID");
		reportFields.add("Exception.ProcessorResponseCode");
		reportFields.add("Exception.ReasonCode");
		reportFields.add("Exception.RetryCount");
		reportFields.add("Fee.AssessmentAmount");
		reportFields.add("Fee.AssessmentCurrency");
		reportFields.add("Fee.BillingCycle");
		reportFields.add("Fee.BillingType");
		reportFields.add("Fee.ClearedInterchangeLevel");
		reportFields.add("Fee.DiscountAmount");
		reportFields.add("Fee.DiscountCurrency");
		reportFields.add("Fee.DiscountRate");
		reportFields.add("Fee.DowngradeReasonCode");
		reportFields.add("Fee.InterchangeAmount");
		reportFields.add("Fee.InterchangeCurrency");
		reportFields.add("Fee.InterchangeRate");
		reportFields.add("Fee.PerItemFeeAmount");
		reportFields.add("Fee.PerItemFeeCurrency");
		reportFields.add("Fee.PricedInterchangeLevel");
		reportFields.add("Fee.ServiceFeeAmount");
		reportFields.add("Fee.ServiceFeeAmountCcy");
		reportFields.add("Fee.ServiceFeeFixedAmount");
		reportFields.add("Fee.ServiceFeeFixedAmountCcy");
		reportFields.add("Fee.ServiceFeeRate");
		reportFields.add("Fee.SettlementAmount");
		reportFields.add("Fee.SettlementCurrency");
		reportFields.add("Fee.SettlementTime");
		reportFields.add("Fee.SettlementTimeZone");
		reportFields.add("Fee.SourceDescriptor");
		reportFields.add("Fee.TotalFeeAmount");
		reportFields.add("Fee.TotalFeeCurrency");
		reportFields.add("Funding.AdjustmentAmount");
		reportFields.add("Funding.AdjustmentCurrency");
		reportFields.add("Funding.AdjustmentDescription");
		reportFields.add("Funding.AdjustmentType");
		reportFields.add("FundTransfer.BankCheckDigit");
		reportFields.add("FundTransfer.IbanIndicator");
		reportFields.add("Invoice.BillingGroupDescription");
		reportFields.add("Invoice.NotProcessed");
		reportFields.add("Invoice.OrganizationID");
		reportFields.add("Invoice.PerformedServices");
		reportFields.add("Invoice.Processed");
		reportFields.add("Invoice.Total");
		reportFields.add("JP.Amount");
		reportFields.add("JP.AuthForward");
		reportFields.add("JP.AuthorizationCode");
		reportFields.add("JP.CardSuffix");
		reportFields.add("JP.Currency");
		reportFields.add("JP.CustomerFirstName");
		reportFields.add("JP.CustomerLastName");
		reportFields.add("JP.Date");
		reportFields.add("JP.Gateway");
		reportFields.add("JP.JPOInstallmentMethod");
		reportFields.add("JP.JPOPaymentMethod");
		reportFields.add("JP.MerchantID");
		reportFields.add("JP.MerchantReferenceNumber");
		reportFields.add("JP.PaymentMethod");
		reportFields.add("JP.RequestID");
		reportFields.add("JP.SubscriptionID");
		reportFields.add("JP.Time");
		reportFields.add("JP.TransactionReferenceNumber");
		reportFields.add("JP.TransactionType");
		reportFields.add("LineItems.FulfillmentType");
		reportFields.add("LineItems.InvoiceNumber");
		reportFields.add("LineItems.MerchantProductSku");
		reportFields.add("LineItems.ProductCode");
		reportFields.add("LineItems.ProductName");
		reportFields.add("LineItems.Quantity");
		reportFields.add("LineItems.TaxAmount");
		reportFields.add("LineItems.UnitPrice");
		reportFields.add("MarkAsSuspectFields.MarkingDate");
		reportFields.add("MarkAsSuspectFields.MarkingNotes");
		reportFields.add("MarkAsSuspectFields.MarkingReason");
		reportFields.add("MarkAsSuspectFields.MarkingUserName");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData1");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData10");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData100");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData11");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData12");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData13");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData14");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData15");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData16");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData17");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData18");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData19");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData2");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData20");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData21");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData22");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData23");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData24");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData25");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData26");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData27");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData28");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData29");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData3");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData30");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData31");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData32");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData34");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData35");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData36");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData37");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData39");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData4");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData40");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData41");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData43");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData44");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData45");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData46");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData48");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData49");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData5");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData50");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData52");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData53");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData54");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData56");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData57");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData58");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData59");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData6");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData61");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData62");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData63");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData65");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData66");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData67");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData68");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData7");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData70");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData71");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData72");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData73");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData74");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData75");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData76");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData77");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData78");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData79");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData8");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData80");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData81");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData82");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData83");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData84");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData85");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData86");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData87");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData88");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData89");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData9");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData90");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData91");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData92");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData93");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData94");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData95");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData96");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData97");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData98");
		reportFields.add("Merchant-DefinedDataFields.MerchantDefinedData99");
		reportFields.add("OctSummary.AccountId");
		reportFields.add("OctSummary.ResellerId");
		reportFields.add("OctSummary.SettlementAmountCurrency");
		reportFields.add("OctSummary.SettlementDate");
		reportFields.add("OctSummary.TransactionAmountCurrency");
		reportFields.add("OrderFields.ConnectionMethod");
		reportFields.add("OrderFields.MerchantID");
		reportFields.add("OrderFields.MerchantReferenceNumber");
		reportFields.add("OrderFields.ReasonCode");
		reportFields.add("OrderFields.ReplyCode");
		reportFields.add("OrderFields.ReplyFlag");
		reportFields.add("OrderFields.ReplyMessage");
		reportFields.add("OrderFields.RequestID");
		reportFields.add("OrderFields.ShippingMethod");
		reportFields.add("OrderFields.TransactionDate");
		reportFields.add("PayerAuth.RequestID");
		reportFields.add("PayerAuth.TransactionType");
		reportFields.add("PaymentData.ACHVerificationResult");
		reportFields.add("PaymentData.ACHVerificationResultMapped");
		reportFields.add("PaymentData.AcquirerMerchantID");
		reportFields.add("PaymentData.AuthIndicator");
		reportFields.add("PaymentData.AuthorizationCode");
		reportFields.add("PaymentData.AuthorizationType");
		reportFields.add("PaymentData.AuthReversalAmount");
		reportFields.add("PaymentData.AuthReversalResult");
		reportFields.add("PaymentData.AVSResult");
		reportFields.add("PaymentData.AVSResultMapped");
		reportFields.add("PaymentData.BalanceAmount");
		reportFields.add("PaymentData.BalanceCurrencyCode");
		reportFields.add("PaymentData.BinNumber");
		reportFields.add("PaymentData.CardCategory");
		reportFields.add("PaymentData.CardCategoryCode");
		reportFields.add("PaymentData.CardPresent");
		reportFields.add("PaymentData.CurrencyCode");
		reportFields.add("PaymentData.CVResult");
		reportFields.add("PaymentData.DCCIndicator");
		reportFields.add("PaymentData.EMVRequestFallBack");
		reportFields.add("PaymentData.EVEmail");
		reportFields.add("PaymentData.EVEmailRaw");
		reportFields.add("PaymentData.EVName");
		reportFields.add("PaymentData.EVNameRaw");
		reportFields.add("PaymentData.EVPhoneNumber");
		reportFields.add("PaymentData.EVPhoneNumberRaw");
		reportFields.add("PaymentData.EVPostalCode");
		reportFields.add("PaymentData.EVPostalCodeRaw");
		reportFields.add("PaymentData.EVStreet");
		reportFields.add("PaymentData.EVStreetRaw");
		reportFields.add("PaymentData.ExchangeRate");
		reportFields.add("PaymentData.ExchangeRateDate");
		reportFields.add("PaymentData.MandateReferenceNumber");
		reportFields.add("PaymentData.NetworkCode");
		reportFields.add("PaymentData.NetworkTransactionID");
		reportFields.add("PaymentData.NumberOfInstallments");
		reportFields.add("PaymentData.OriginalAmount");
		reportFields.add("PaymentData.OriginalCurrency");
		reportFields.add("PaymentData.PaymentProductCode");
		reportFields.add("PaymentData.POSEntryMode");
		reportFields.add("PaymentData.ProcessorMID");
		reportFields.add("PaymentData.ProcessorResponseCode");
		reportFields.add("PaymentData.ProcessorResponseID");
		reportFields.add("PaymentData.ProcessorTID");
		reportFields.add("PaymentData.ProcessorTransactionID");
		reportFields.add("PaymentData.RequestedAmount");
		reportFields.add("PaymentData.RequestedAmountCurrencyCode");
		reportFields.add("PaymentData.SubMerchantCity");
		reportFields.add("PaymentData.SubMerchantCountry");
		reportFields.add("PaymentData.SubMerchantEmail");
		reportFields.add("PaymentData.SubMerchantID");
		reportFields.add("PaymentData.SubMerchantName");
		reportFields.add("PaymentData.SubMerchantPhone");
		reportFields.add("PaymentData.SubMerchantPostalCode");
		reportFields.add("PaymentData.SubMerchantState");
		reportFields.add("PaymentData.SubMerchantStreet");
		reportFields.add("PaymentData.TargetAmount");
		reportFields.add("PaymentData.TargetCurrency");
		reportFields.add("PaymentFields.AccountSuffix");
		reportFields.add("PaymentFields.CardBIN");
		reportFields.add("PaymentFields.CardBINCountry");
		reportFields.add("PaymentFields.CardIssuer");
		reportFields.add("PaymentFields.CardScheme");
		reportFields.add("PaymentFields.CardType");
		reportFields.add("PaymentFields.CardVerificationResult");
		reportFields.add("PaymentMethod.AccountSuffix");
		reportFields.add("PaymentMethod.AdditionalCardType");
		reportFields.add("PaymentMethod.BankAccountName");
		reportFields.add("PaymentMethod.BankCode");
		reportFields.add("PaymentMethod.BoletoBarCodeNumber");
		reportFields.add("PaymentMethod.BoletoNumber");
		reportFields.add("PaymentMethod.CardType");
		reportFields.add("PaymentMethod.CheckNumber");
		reportFields.add("PaymentMethod.ExpirationMonth");
		reportFields.add("PaymentMethod.ExpirationYear");
		reportFields.add("PaymentMethod.IssueNumber");
		reportFields.add("PaymentMethod.MandateId");
		reportFields.add("PaymentMethod.StartMonth");
		reportFields.add("PaymentMethod.StartYear");
		reportFields.add("PaymentMethod.WalletType");
		reportFields.add("POSTerminalExceptions.AccountSuffix");
		reportFields.add("POSTerminalExceptions.CurrencyCode");
		reportFields.add("POSTerminalExceptions.ExpirationMO");
		reportFields.add("POSTerminalExceptions.ExpirationYR");
		reportFields.add("POSTerminalExceptions.LastName");
		reportFields.add("POSTerminalExceptions.MerchantID");
		reportFields.add("Recipient.RecipientBillingAmount");
		reportFields.add("Recipient.RecipientBillingCurrency");
		reportFields.add("Recipient.ReferenceNumber");
		reportFields.add("Request.PartnerOriginalTransactionID");
		reportFields.add("Sender.Address");
		reportFields.add("Sender.City");
		reportFields.add("Sender.Country");
		reportFields.add("Sender.DOB");
		reportFields.add("Sender.FirstName");
		reportFields.add("Sender.LastName");
		reportFields.add("Sender.MiddleInitial");
		reportFields.add("Sender.PhoneNumber");
		reportFields.add("Sender.PostalCode");
		reportFields.add("Sender.SenderReferenceNumber");
		reportFields.add("Sender.SourceOfFunds");
		reportFields.add("Sender.State");
		reportFields.add("ShipTo.CompanyName");
		reportFields.add("Subscriptions.Applications");
		reportFields.add("Subscriptions.AuthAVSResults");
		reportFields.add("Subscriptions.AuthCardVerificationResult");
		reportFields.add("Subscriptions.AuthCode");
		reportFields.add("Subscriptions.AuthRCode");
		reportFields.add("Subscriptions.AuthResponseCode");
		reportFields.add("Subscriptions.AuthType");
		reportFields.add("Subscriptions.BillToAddress1");
		reportFields.add("Subscriptions.BillToAddress2");
		reportFields.add("Subscriptions.BillToCity");
		reportFields.add("Subscriptions.BillToCompanyName");
		reportFields.add("Subscriptions.BillToCountry");
		reportFields.add("Subscriptions.BillToEmail");
		reportFields.add("Subscriptions.BillToFirstName");
		reportFields.add("Subscriptions.BillToLastName");
		reportFields.add("Subscriptions.BillToState");
		reportFields.add("Subscriptions.BillToZip");
		reportFields.add("Subscriptions.CardType");
		reportFields.add("Subscriptions.Comments");
		reportFields.add("Subscriptions.ConsumerPhone");
		reportFields.add("Subscriptions.CurrencyCode");
		reportFields.add("Subscriptions.CustomerCCAccountSuffix");
		reportFields.add("Subscriptions.CustomerCCExpiryMonth");
		reportFields.add("Subscriptions.CustomerCCExpiryYear");
		reportFields.add("Subscriptions.CustomerCCIssueNo");
		reportFields.add("Subscriptions.CustomerCCRoutingNumber");
		reportFields.add("Subscriptions.CustomerCCStartMonth");
		reportFields.add("Subscriptions.CustomerCCStartYear");
		reportFields.add("Subscriptions.CustomerCCSubTypeDescription");
		reportFields.add("Subscriptions.EcommerceIndicator");
		reportFields.add("Subscriptions.IPAddress");
		reportFields.add("Subscriptions.MerchantDefinedData1");
		reportFields.add("Subscriptions.MerchantDefinedData2");
		reportFields.add("Subscriptions.MerchantDefinedData3");
		reportFields.add("Subscriptions.MerchantDefinedData4");
		reportFields.add("Subscriptions.MerchantRefNo");
		reportFields.add("Subscriptions.MerchantSecureData1");
		reportFields.add("Subscriptions.MerchantSecureData2");
		reportFields.add("Subscriptions.MerchantSecureData3");
		reportFields.add("Subscriptions.MerchantSecureData4");
		reportFields.add("Subscriptions.PaymentProcessor");
		reportFields.add("Subscriptions.PaymentsSuccess");
		reportFields.add("Subscriptions.RCode");
		reportFields.add("Subscriptions.ReasonCode");
		reportFields.add("Subscriptions.RequestID");
		reportFields.add("Subscriptions.RequestToken");
		reportFields.add("Subscriptions.RFlag");
		reportFields.add("Subscriptions.RMsg");
		reportFields.add("Subscriptions.ShipToAddress1");
		reportFields.add("Subscriptions.ShipToAddress2");
		reportFields.add("Subscriptions.ShipToCity");
		reportFields.add("Subscriptions.ShipToCompanyName");
		reportFields.add("Subscriptions.ShipToCountry");
		reportFields.add("Subscriptions.ShipToFirstName");
		reportFields.add("Subscriptions.ShipToLastName");
		reportFields.add("Subscriptions.ShipToState");
		reportFields.add("Subscriptions.ShipToZip");
		reportFields.add("Subscriptions.SubscriptionID");
		reportFields.add("Subscriptions.TaxAmount");
		reportFields.add("Subscriptions.TransactionDate");
		reportFields.add("Subscriptions.TransRefNo");
		reportFields.add("TaxCalculation.Status");
		reportFields.add("Token.NetworkTokenTransType");
		reportFields.add("Token.TokenCode");
		reportFields.add("TransactionDetails.MerchantId");
		reportFields.add("TransactionDetails.PaymentMethodDesc");
		reportFields.add("TransactionDetails.PaymentMethodType");
		reportFields.add("TransactionDetails.RequestId");
		reportFields.add("TravelFields.DepartureTime");
		reportFields.add("VelocityMorphing.FieldName");
		reportFields.add("VelocityMorphing.InfoCode");
		reportFields.add("WhitepagesProFields.EmailDomainCreationDate");
		requestObj.reportFields(reportFields);

		requestObj.reportMimeType("application/xml");
		requestObj.reportName("testrest_v2");
		requestObj.timezone("GMT");
		requestObj.reportStartTime(new DateTime("2018-09-01T12:30:00.000+05:30"));
		requestObj.reportEndTime(new DateTime("2018-09-02T12:30:00.000+05:30"));
		Reportingv3reportsReportPreferences reportPreferences = new Reportingv3reportsReportPreferences();
		reportPreferences.signedAmounts(true);
		reportPreferences.fieldNameConvention("SOAPI");
		requestObj.reportPreferences(reportPreferences);

		String organizationId = "testrest";

		
		try
		{
			merchantProp = Configuration.getMerchantDetails();
			ApiClient apiClient = new ApiClient();
			MerchantConfig merchantConfig = new MerchantConfig(merchantProp);
			apiClient.merchantConfig = merchantConfig;

			ReportsApi apiInstance = new ReportsApi(apiClient);
			apiInstance.createReport(requestObj, organizationId);

			responseCode = apiClient.responseCode;
			status = apiClient.status;
			System.out.println("ResponseCode :" + responseCode);
			System.out.println("ResponseMessage :" + status);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	
	}
}
